{"version":3,"sources":["sortinghat.svg","App.js","index.js"],"names":["module","exports","StyledApp","styled","div","props","sorted","StyledResult","StyledName","StyledHat","img","shuffle","array","sort","Math","random","sleep","ms","a","Promise","resolve","reject","setTimeout","Result","person","styles","color","floor","toString","style","whiteSpace","App","useState","undefined","selectedPerson","setSelectedPerson","setSorted","sorting","setSorting","pickSomeone","team","members","length","i","sqrt","src","hat","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,wC,g9BCM3C,IAAMC,EAAYC,IAAOC,IAAV,KAMC,SAACC,GAAD,OAAWA,EAAMC,OAAS,OAAQ,WAI5CC,EAAeJ,IAAOC,IAAV,KAQZI,EAAaL,IAAOC,IAAV,KAGVK,EAAYN,IAAOO,IAAV,KAcf,SAASC,EAAQC,GACfA,EAAMC,MAAK,kBAAMC,KAAKC,SAAW,M,SAGpBC,E,8EAAf,WAAqBC,GAArB,SAAAC,EAAA,+EACS,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,WAAWF,EAASH,OAFxB,4C,sBAMA,SAASM,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,OAKhB,IAAMC,EAAS,CACbC,MANgC,EAAVpB,OAMN,QAAH,WAJNQ,KAAKa,MAAoB,SAAdb,KAAKC,UAAmBa,SAAS,MAOrD,OACE,kBAACrB,EAAD,KACE,yBAAKsB,MAAO,CAAEC,WAAY,QACvB,mBAEH,kBAACtB,EAAD,CAAYqB,MAAOJ,GAChBD,IA2CMO,MApCf,WAAgB,IAAD,EAC+BC,wBAASC,GADxC,mBACNC,EADM,KACUC,EADV,OAEeH,oBAAS,GAFxB,mBAEN1B,EAFM,KAEE8B,EAFF,OAGiBJ,oBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAKb,SAASC,IACP,OAAOC,EAAKC,QAAQ3B,KAAKa,MAAMb,KAAKC,SAAWyB,EAAKC,QAAQC,SANjD,4CASb,4BAAAxB,EAAA,0DACMmB,EADN,iDAKE1B,EAAQ6B,EAAKC,SAEbL,GAAU,GACVE,GAAW,GACFK,EAAI,EATf,YASkBA,EAAI,IATtB,wBAUIR,EAAkBI,KAVtB,UAWUvB,EAAM,GAAMF,KAAK8B,KAAKD,IAXhC,QAS0BA,IAT1B,uBAaEP,GAAU,GACVE,GAAW,GAdb,6CATa,sBA0Bb,OACE,kBAACpC,EAAD,CAAWI,OAAQA,GACjB,kBAACG,EAAD,CAAWoC,IAAKC,IAAKC,QA5BZ,6CA6BRb,GACC,kBAACX,EAAD,CAAQC,OAAQU,EAAgB5B,OAAQA,MClGhD0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.a86aa1e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sortinghat.c17c5207.svg\";","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport team from './team.json';\nimport hat from './sortinghat.svg';\n\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background: ${(props) => props.sorted ? 'gold': 'white'};\n  transition: background-color 1s ease;\n`;\n\nconst StyledResult = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 4em;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledName = styled.div`\n`;\n\nconst StyledHat = styled.img`\n  width: 100px;\n  cursor: pointer;\n\n  &:hover {\n    animation: spin 1s infinite;\n  }\n\n  @keyframes spin {\n    from {transform:rotate(0deg);}\n    to {transform:rotate(360deg);}\n  }\n`;\n\nfunction shuffle(array) {\n  array.sort(() => Math.random() - 0.5);\n}\n\nasync function sleep(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, ms);\n  });  \n}\n\nfunction Result({ person, sorted }) {\n  function pickColor() {\n    return Math.floor(Math.random()*16777215).toString(16);\n  }\n\n  const styles = {\n    color: sorted ? 'white' : `#${pickColor()}`,\n  };\n\n  return (\n    <StyledResult>\n      <div style={{ whiteSpace: \"pre\" }}>\n        {\"You're a wizard\"}\n      </div>\n      <StyledName style={styles}>\n        {person}\n      </StyledName>\n    </StyledResult>\n  );\n}\n\n\nfunction App() {\n  const [selectedPerson, setSelectedPerson] = useState(undefined);\n  const [sorted, setSorted] = useState(false);\n  const [sorting, setSorting] = useState(false);\n\n  function pickSomeone() {\n    return team.members[Math.floor(Math.random() * team.members.length)];\n  }\n\n  async function handleSort() {\n    if (sorting) {\n      return;\n    }\n\n    shuffle(team.members);\n    \n    setSorted(false);\n    setSorting(true);\n    for (let i = 0; i < 40; i++) {\n      setSelectedPerson(pickSomeone());\n      await sleep(30 * (Math.sqrt(i)));\n    }\n    setSorted(true);\n    setSorting(false);\n  }  \n  \n  return (\n    <StyledApp sorted={sorted}>\n      <StyledHat src={hat} onClick={handleSort} />\n      {selectedPerson && (\n        <Result person={selectedPerson} sorted={sorted}/>\n      )}\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}